#!/usr/bin/python

import sys
sys.dont_write_bytecode = True # prevent creation of .pyc files

### This object keeps track of inputs and outputs for the
### run of the tool
class Run:
    #Args Passed by ParamILS:
    #    0 - script name
    #    1 - instance name (input full filename)
    #    2 - instance specific information
    #        (this is the <rest> from instance file
    #        (all columns after filename))
    #    3 - cutoff time (time limit)
    #    4 - cutoff length (??? - pass "-1" if this param doesn't make sense)
    #    5 - seed (??? probably doesn't apply to SMACK
    #        (maybe z3 can take seed?))
    #   6+ - All remaining params are the parameters being tried by paramils

    ### Takes argv array passed during paramils call to tool
    ### Parses these arguments, creating a "Run" of the tool
    ###
    def __init__(self, toolArgs)
        self.name         = toolArgs[1]
        self.rest         = toolArgs[2]
        self.cutoffTime   = int(float(toolArgs[3]))
        self.cutoffLength = int(float(toolArgs[4]))
        self.seed         = int(float(toolArgs[5]))
        self.args         = toolArgs[6:]

### A base class to derive tool wrappers for ParamILS
class ToolWrapper:
    ### Calls the child class's implementation of run(),
    ### and times the execution.
    ### Then calls child class's parseResult()
    ### Takes an input file name, a time limit, and the arguments
    ### Returns a list of six items, 
