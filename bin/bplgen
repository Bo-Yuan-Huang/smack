#!/bin/bash

HOME=/home/zvonimir/projects/llvm/src/projects/smack
SMACK_LIB=/home/zvonimir/projects/llvm/build/projects/smack/Debug+Asserts/lib/smack.so

#OPTS="-internalize -mem2reg -dce -lowerswitch"
OPTS="-internalize -mem2reg -die -lowerswitch"
#OPTS="-internalize -die -lowerswitch"

#SMACK_OPTS="-inference -allocated_checks -buffer_checks"
#SMACK_OPTS="-inference -allocated_checks -buffer_checks -generate_lines"
#SMACK_OPTS="-allocated_checks -buffer_checks -type_checks -generate_lines"
#SMACK_OPTS="-allocated_checks -buffer_checks -type_inference -generate_lines"
#SMACK_OPTS="-inference -allocated_checks -buffer_checks -type_checks -generate_lines"
#SMACK_OPTS="-inference"
#SMACK_OPTS="-type_checks -generate_lines"
#SMACK_OPTS="-allocated_assumes -type_checks -type_inference -generate_lines"
#SMACK_OPTS="-allocated_assumes -type_inference -generate_lines"
#SMACK_OPTS="-allocated_assumes -type_assumes -generate_lines"
#SMACK_OPTS="-allocated_assumes -buffer_assumes -type_assumes -generate_lines" # this is a good one
#SMACK_OPTS="-allocated_assumes -type_checks -generate_lines"
#SMACK_OPTS="-allocated_assumes -buffer_assumes -type_checks -generate_lines" # you have to use this one (although it's slower than the previous one)
#SMACK_OPTS="-allocated_assumes -buffer_assumes -type_inference -generate_lines"
#SMACK_OPTS="-allocated_assumes -generate_lines"
#SMACK_OPTS="-type_assumes -generate_lines"
#SMACK_OPTS="-type_inference -generate_lines"
#SMACK_OPTS="-generate_lines"


PRELUDE=$HOME/bin/prelude.bpl

# Test if command line argument present (non-empty).
if [ -n "$2" ]
then
  if [ "$2" = "-inference" ]
  then
    SMACK_OPTS="-inference $SMACK_OPTS"
  fi
  if [ "$2" = "-monolithic" ]
  then
    SMACK_OPTS="-monolithic $SMACK_OPTS"
    PRELUDE=$HOME/headers/prelude_bits_monolitic.bpl
  fi
  if [ "$2" = "-use_dsa" ]
  then
    DSA_LIB=/home/zrakamar/projects/llvm-2.6/obj/projects/poolalloc/Debug/lib/libLLVMDataStructure.so
    SMACK_OPTS="-calltarget $SMACK_OPTS"
  fi
fi  

# llvm-gcc -O0 -emit-llvm -c $1.c -o tmp.bc
echo "Generating tmp.bc file..."
opt $OPTS < $1 > tmp.bc

echo "Generating BPL file..."
if [ -n "$DSA_LIB" ]
then
  opt -load $DSA_LIB -load $SMACK_LIB $OPTS $SMACK_OPTS -bpl_print -debug-only=bpl < $1 > /dev/null 2> tmp.bpl
else
  opt -load $SMACK_LIB $OPTS $SMACK_OPTS -bpl_print -debug-only=bpl < $1 > /dev/null 2> tmp.bpl
fi

# Concatenating prelude and generated bpl file
sed -n '/MODULE/,$p' < tmp.bpl > tmp1.bpl
(cat $PRELUDE ; cat tmp1.bpl) > $1.bpl
exit

